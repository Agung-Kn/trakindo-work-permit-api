// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model WorkPermit {
  id         Int      @id @default(autoincrement())
  company    String
  branch     String
  pic        String
  location   String
  department String
  owner      String
  startDate  DateTime
  endDate    DateTime
  status     Status   @default(PENDING)

  equipments  Equipment[]
  machines    Machine[]
  materials   Material[]
  ppes        WorkPermitPPE[]
  emergencies WorkPermitEmergency[]
  checklists  ChecklistAnswer[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Equipment {
  id           Int        @id @default(autoincrement())
  name         String
  qty          Int
  workPermitId Int
  workPermit   WorkPermit @relation(fields: [workPermitId], references: [id], onDelete: Cascade)
}

model Machine {
  id           Int        @id @default(autoincrement())
  name         String
  qty          Int
  workPermitId Int
  workPermit   WorkPermit @relation(fields: [workPermitId], references: [id], onDelete: Cascade)
}

model Material {
  id           Int        @id @default(autoincrement())
  name         String
  qty          Int
  workPermitId Int
  workPermit   WorkPermit @relation(fields: [workPermitId], references: [id], onDelete: Cascade)
}

model WorkPermitPPE {
  id           Int        @id @default(autoincrement())
  name         String
  selected     Boolean    @default(false)
  workPermitId Int
  workPermit   WorkPermit @relation(fields: [workPermitId], references: [id], onDelete: Cascade)
}

model WorkPermitEmergency {
  id           Int        @id @default(autoincrement())
  name         String
  selected     Boolean    @default(false)
  workPermitId Int
  workPermit   WorkPermit @relation(fields: [workPermitId], references: [id], onDelete: Cascade)
}

model ChecklistAnswer {
  id           Int        @id @default(autoincrement())
  question     String
  answer       String
  additional   String?
  workPermitId Int
  workPermit   WorkPermit @relation(fields: [workPermitId], references: [id], onDelete: Cascade)
}

enum Status {
  PENDING
  APPROVED
  REJECTED
  COMPLETED
}
